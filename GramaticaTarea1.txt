////////
LineTerminator = \r|\n|\r\n
InputCharacter = [^\r\n]
WhiteSpace     = {LineTerminator} | [ \t\f]
cinta = [a-zA-Z_]
cintapapel = [a-zA-Z_0-9]

Comment = {TraditionalComment} | {EndOfLineComment}

TraditionalComment   = "/\_" [^\_] ~"\_/" | "/\_" "\_"+ "/"
EndOfLineComment     = "@" {InputCharacter}* {LineTerminator}?

rpersona = {cinta} {cintapapel}*
rSeparador = \,
rRegalo = \' {InputCharacter} \'

isantaclaus = [0-9] //digito
rsantaclaus = [1-9] //digito no cero
rt_pos_int_sinterklass = [1-9]{isantaclaus}*
rt_int_sinterklass =  0 | -?[1-9]{isantaclaus}* 
rt_float_santa = -? (0 | {rsantaclaus} {isantaclaus}*) ("." {isantaclaus}+)? (("e" | "E") -? {isantaclaus}+)?

//literales
"int" 			return t_int_sinterklass
"float" 		return t_float_santa
"str" 		    return t_string_nicolas
"char" 			return t_char_dedmoroz
"define"		return DEFINEREGALO
"void"			reutrun SINREGALO
"boolean" 		return t_bool_colacho
"for"			return ENVUELVE
"while"			return ESPERARASANTA
"do"			return HACE
"until"         return REVISA
"switch"        return TRINEO
"case"			return CUERDA
"default"		return FRENO
"break"			return CORTA
"if"			return ELFO
"else"			return DUENDE
"elif"			return HADA
"print"			return NARRA
"read"			return ESCUCHA
"return"		return RETORNAREGALO

//Tipos de booleanos
"true"			return l_tPAPANOEL
"false"			return l_fPAPANOEL

//Operadores aritmeticos binarios

"+"    return sum_dasher;
"-"    return res_dancer;
"*"    return mul_prancer;
"/"    return div_int_vixen;
"//"   return div_float_blitzen;  
"%"    return mod_comet;
"^"    return pow_cupid;

//Operadores aritmeticos unarios
"--"			return QUIEN
"++"			return GRINCH

//asignacion y parentesis
"<="   			return ENTREGA
"|"				return FINREGALO
“(“   			return ABRECUENTO
“)” 			return CIERRACUENTO
“[“   			return ABREEMPAQUE
“]” 			return CIERRAEMPAQUE
“{“   			return ABREEMPAQUE
“}” 			return CIERRAEMPAQUE
":"				return LUCES

//relacionales
"=="			return e_jinglebell
"!="			return ne_tinseltoes
"<"				return l_slinky
">"				return g_merryberry
"=>"			return ge_snowflake
"=<"			return le_candycane

//logicos
"^"				return and_melchior
"#"				return or_balthassar
"!"				return not_gaspar

//Identificador
rpersona 		return PERSONA


rt_int_sinterklass 			return l_int_dedmoroz
rt_pos_int_sinterklass 		return l_pos_int_dedmoroz
rt_float_santa 				return l_float_padrenavidadS
rRegalo 					return l_MINIREGALO
rSeparador					return SEPARAREGALO



//Tipos
tsantaclaus ::= 
	t_int_sinterklass |
	t_float_santa |
	t_string_nicolas |
	t_bool_colacho |
	t_char_dedmoroz;

//Literales
tlsantaclaus ::=
	l_int_dedmoroz |
	l_float_santa |
	l_string_nicolas |
	l_MINIREGALO |    //char
	l_tPAPANOEL | //true
	l_fPAPANOEL;   //false



//Inicial
navidad ::= bolsaNavidena // 
bolsaNavidena ::= bolsaNavidenaAux ;
bolsaNavidenaAux ::= defBolsaNavidena | bolsaNavidenaAux defBolsaNavidena ;


 
//Se definen tipos de funciones: main, tipo sin parametros y tipo con parametros 

defBolsaNavidena ::= bolsasNavidenas codigoBolsaNavidena ;

bolsasNavidenas ::= "function" tsantaclaus "main" ABRECUENTO CIERRACUENTO 
					| "function" tsantaclaus PERSONA ABRECUENTO CIERRACUENTO  
					| "function" tsantaclaus PERSONA ABRECUENTO paramBastoncitos CIERRACUENTO ; 


codigoBolsaNavidena ::= ABREEMPAQUE lineasDeNavidad CIERRAEMPAQUE ;

lineasDeNavidad ::= auxLineasDeNavidad | lineasDeNavidad auxLineasDeNavidad ;


auxLineasDeNavidad ::= creaRegalo FINREGALO| pesebre | 
					 | RETORNAREGALO exprRegalo FINREGALO
					 | CORTA FINREGALO ;

exprRegalo ::=  tlsantaclaus | creaRegalo | ABRECUENTO exprRegalo CIERRACUENTO 
				| regaloprinBinario | regaloprinUnario | regalocompradoRelacional 
				| regaloManual ;

//Creacion, llamados y asignaciones de expresiones
creaRegalo ::= "local" tsantaclaus PERSONA  | "local" tsantaclaus PERSONA ENTREGA exprRegalo
				| PERSONA ENTREGA exprRegalo 
				| "local" tsanataclaus PERSONA "[" l_pos_int_dedmoroz "]" 
				| "local" tsanataclaus PERSONA "[" l_pos_int_dedmoroz "]" ENTREGA exprRegalo 
				| PERSONA "[" l_pos_int_dedmoroz "]" ENTREGA exprRegalo 
				| PERSONA | PERSONA "[" l_pos_int_dedmoroz "]";


//Estructuras de control
pesebre ::= while_esperarasanta | for_envuelve | do_hace | switch_trineo | if_elfo;

// while () { }
while_esperarasanta ::= ESPERARASANTA ABRECUENTO regalocompradoRelacional CIERRACUENTO ABREREGALO lineasDeNavidad CIERRAREGALO ;

//for(int i = 0; i < 4; i++){}
for_esperarasanta ::= ENVUELVE ABRECUENTO creaREGALO FINREGALO regalocompradoRelacionl FINREGALO regaloprinUnario CIERRACUENTO ABREREGALO lineasDeNavidad CIERRAREGALO ;

//do{ }while()|
do_hace ::= HACE ABREREGALO lineasDeNavidad CIERRAREGALO ESPERARASANTA ABRECUENTO exprRegalo FINREGALO ;

switch_trineo ::= TRINEO ABREREGALO exprRegalo CIERRAREGALO ABRECUENTO switch_trineo_codigo CIERRACUENTO ;

switch_trineo_codigo ::= switch_trineo_caso | switch_trineo_codigo switch_trineo_caso ;

//"case" return CUERDA  o   "default" return FRENO
switch_trineo_caso ::= CUERDA exprRegalo LUCES lineasDeNavidad | FRENO LUCES lineasDeNavidad ;

//Los casos del if, else y elif
if_elfo ::= ELFO ABREREGALO exprRegalo CIERRAREGALO ABRECUENTO lineasDeNavidad CIERRACUENTO 
		| DUENDE ABRECUENTO lineasDeNavidad CIERRACUENTO | HADA ABREREGALO exprRegalo CIERRAREGALO ABRECUENTO lineasDeNavidad CIERRACUENTO ;


//Parametros de funciones (,,)
paramBastoncitos ::= defParamBastoncito | paramBastoncitos SEPARAREGALO defParamBastoncito ;

defParamBastoncito ::= tsantaclaus PERSONA ;

//Operaciones aritmeticas binarias
regaloprinBinario ::= exprRegalo sum_dasher exprRegalo |
					exprRegalo res_dancer exprRegalo |
					exprRegalo div_int_vixen exprRegalo |
					exprRegalo div_float_blitzen exprRegalo |
					exprRegalo mod_comet exprRegalo |
					exprRegalo pow_cupid exprRegalo ;

//Operaciones aritmeticas unarias --a, ++a, a++, a--
regaloprinUnario ::= QUIEN PERSONA | GRINCH PERSONA | PERSONA QUIEN | PERSONA GRINCH; 

//Operaciones relacionales
// a < b,  a < b, a == b, a != b, a => b, a =< b
regalocompradoRelacional ::= exprRegalo l_slinky exprRegalo | 
							exprRegalo g_merryberry exprRegalo |
							exprRegalo e_jinglebell exprRegalo |
							exprRegalo ne_tinseltoes exprRegalo |
							exprRegalo ge_snowflake exprRegalo |
							exprRegalo le_candycane exprRegalo ;

//Operaciones logicas
// a ^ b, a # b, !a 
regaloManual ::= exprRegalo and_melchior exprRegalo |
				exprRegalo or_balthassar exprRegalo |
				exprRegalo not_gaspar exprRegalo ;